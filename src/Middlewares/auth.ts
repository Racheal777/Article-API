

import {verify,sign} from 'jsonwebtoken'
import {User} from '../Models/users'

import { NextFunction, Request, Response } from 'express'
import dotenv from 'dotenv'

dotenv.config()

const SecretKey = '0igyftrdrdvhbgyuni'
export const authenticate = (req:Request, res:Response, next:NextFunction) =>{
    //accessing the cookie
    const token = req.cookies.jwt
    //console.log(token)
    
    //check if the token matches with the one generated by the private key
    if(token){
        verify(token, SecretKey, (err:any, decoded:any) => {
            if(err){
                console.log(err)
            }else{
                //res.json(decoded)
                console.log('decoded',decoded)
                next()
            }
        })
    }else{
        res.json("token not existing")
    }
}


//generate token for authentication
export const generateToken = ( id: any ) => {
    return sign({ id }, SecretKey, {
        expiresIn: 1 * 24 * 60 * 60 * 1000
    })
}


export const checkDuplicateUsernameOrEmail = (req:Request, res:Response, next:NextFunction) => {
    // find if Username exist
    User.findOne({
      username: req.body.username
    }).exec((err, user) => {
      if (err) {
        res.status(500).send({ message: err });
        return;
      }
  
      if (user) {
        res.status(400).send({ message: "Failed! Username is already in use!" });
        return;
      }
  
      // find if Email exist
      User.findOne({
        email: req.body.email
      }).exec((err, user) => {
        if (err) {
          res.status(500).send({ message: err });
          return;
        }
  
        if (user) {
          res.status(400).send({ message: "Failed! Email is already in use!" });
          return;
        }
  
        next();
      });
    });
  };
